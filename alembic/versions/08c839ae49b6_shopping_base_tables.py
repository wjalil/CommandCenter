"""shopping base tables

Revision ID: 08c839ae49b6
Revises: 
Create Date: 2025-09-24 15:54:00.609115

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '08c839ae49b6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_lines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'name', name='uq_bl_tenant_name')
    )
    op.create_index(op.f('ix_business_lines_tenant_id'), 'business_lines', ['tenant_id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'name', name='uq_cat_tenant_name')
    )
    op.create_index(op.f('ix_categories_tenant_id'), 'categories', ['tenant_id'], unique=False)
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('contact', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'name', name='uq_supplier_tenant_name')
    )
    op.create_index(op.f('ix_suppliers_tenant_id'), 'suppliers', ['tenant_id'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('business_line_id', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('par_level', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('default_supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_line_id'], ['business_lines.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['default_supplier_id'], ['suppliers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'name', name='uq_item_tenant_name')
    )
    op.create_index(op.f('ix_items_name'), 'items', ['name'], unique=False)
    op.create_index(op.f('ix_items_tenant_id'), 'items', ['tenant_id'], unique=False)
    op.create_table('shopping_events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('from_status', sa.String(), nullable=True),
    sa.Column('to_status', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('actor', sa.String(), nullable=True),
    sa.Column('at', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shopping_events_tenant_id'), 'shopping_events', ['tenant_id'], unique=False)
    op.create_table('shopping_needs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('needed', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('last_updated_by', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'item_id', name='uq_need_tenant_item')
    )
    op.create_index(op.f('ix_shopping_needs_item_id'), 'shopping_needs', ['item_id'], unique=False)
    op.create_index(op.f('ix_shopping_needs_needed'), 'shopping_needs', ['needed'], unique=False)
    op.create_index(op.f('ix_shopping_needs_status'), 'shopping_needs', ['status'], unique=False)
    op.create_index(op.f('ix_shopping_needs_tenant_id'), 'shopping_needs', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_shopping_needs_tenant_id'), table_name='shopping_needs')
    op.drop_index(op.f('ix_shopping_needs_status'), table_name='shopping_needs')
    op.drop_index(op.f('ix_shopping_needs_needed'), table_name='shopping_needs')
    op.drop_index(op.f('ix_shopping_needs_item_id'), table_name='shopping_needs')
    op.drop_table('shopping_needs')
    op.drop_index(op.f('ix_shopping_events_tenant_id'), table_name='shopping_events')
    op.drop_table('shopping_events')
    op.drop_index(op.f('ix_items_tenant_id'), table_name='items')
    op.drop_index(op.f('ix_items_name'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_suppliers_tenant_id'), table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_categories_tenant_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_business_lines_tenant_id'), table_name='business_lines')
    op.drop_table('business_lines')
    # ### end Alembic commands ###
